// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210116013206_slightly")]
    partial class slightly
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.LawSuit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("StatusId");

                    b.ToTable("LawSuits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpirationDate = new DateTime(2000, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PersonId = 1,
                            RegistrationDate = new DateTime(1992, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("DAL.Entities.LawSuitDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasCity")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPersonType")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPhoneType")
                        .HasColumnType("bit");

                    b.Property<bool>("HasStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LawSuitDictionaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasCity = false,
                            HasPersonType = false,
                            HasPhoneType = false,
                            HasStatus = true,
                            Name = "Ongoing"
                        },
                        new
                        {
                            Id = 2,
                            HasCity = false,
                            HasPersonType = false,
                            HasPhoneType = false,
                            HasStatus = true,
                            Name = "Finished"
                        },
                        new
                        {
                            Id = 3,
                            HasCity = false,
                            HasPersonType = false,
                            HasPhoneType = false,
                            HasStatus = true,
                            Name = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            HasCity = false,
                            HasPersonType = false,
                            HasPhoneType = false,
                            HasStatus = true,
                            Name = "Stalled"
                        },
                        new
                        {
                            Id = 5,
                            HasCity = false,
                            HasPersonType = false,
                            HasPhoneType = true,
                            HasStatus = false,
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 6,
                            HasCity = false,
                            HasPersonType = false,
                            HasPhoneType = true,
                            HasStatus = false,
                            Name = "Home"
                        },
                        new
                        {
                            Id = 7,
                            HasCity = true,
                            HasPersonType = false,
                            HasPhoneType = false,
                            HasStatus = false,
                            Name = "Tbilisi"
                        },
                        new
                        {
                            Id = 8,
                            HasCity = true,
                            HasPersonType = false,
                            HasPhoneType = false,
                            HasStatus = false,
                            Name = "Batumi"
                        },
                        new
                        {
                            Id = 9,
                            HasCity = false,
                            HasPersonType = true,
                            HasPhoneType = false,
                            HasStatus = false,
                            Name = "Private"
                        },
                        new
                        {
                            Id = 10,
                            HasCity = false,
                            HasPersonType = true,
                            HasPhoneType = false,
                            HasStatus = false,
                            Name = "Legal"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("TypeId");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 7,
                            FirstName = "person1",
                            LastName = "lastname1",
                            PersonalId = "010203030",
                            TypeId = 9
                        });
                });

            modelBuilder.Entity("DAL.Entities.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("TypeId");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "555-555-555",
                            PersonId = 1,
                            TypeId = 5
                        });
                });

            modelBuilder.Entity("DAL.Entities.SystemDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasPosition")
                        .HasColumnType("bit");

                    b.Property<bool>("HasUserType")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemDictionaries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasPosition = true,
                            HasUserType = false,
                            Name = "System Administrator"
                        },
                        new
                        {
                            Id = 2,
                            HasPosition = true,
                            HasUserType = false,
                            Name = "Judge"
                        },
                        new
                        {
                            Id = 3,
                            HasPosition = false,
                            HasUserType = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            HasPosition = false,
                            HasUserType = true,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("DAL.Entities.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("TypeId");

                    b.ToTable("SystemUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1992, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Name1",
                            LastName = "Lastnam1",
                            PersonalId = "123123112",
                            PositionId = 1,
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("DAL.Entities.LawSuit", b =>
                {
                    b.HasOne("DAL.Entities.Person", "person")
                        .WithMany("LawSuits")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Entities.LawSuitDictionary", "Status")
                        .WithMany("LawSuits")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.Person", b =>
                {
                    b.HasOne("DAL.Entities.LawSuitDictionary", "City")
                        .WithMany("PersonCities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Entities.LawSuitDictionary", "Type")
                        .WithMany("PersonTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.PhoneNumber", b =>
                {
                    b.HasOne("DAL.Entities.Person", "person")
                        .WithMany("Numbers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Entities.LawSuitDictionary", "Type")
                        .WithMany("Numbers")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.SystemUser", b =>
                {
                    b.HasOne("DAL.Entities.SystemDictionary", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Entities.SystemDictionary", "Type")
                        .WithMany("UserTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
